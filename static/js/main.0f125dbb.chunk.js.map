{"version":3,"sources":["data.js","logo.svg","Cart.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["id","title","content","price","connect","state","reducer","경고창","reducer2","props","Table","responsive","map","a","i","name","quan","onClick","dispatch","type","데이터","className","Detail","lazy","재고context","React","createContext","Shoescontent","재고","useContext","history","useHistory","push","shoes","src","width","App","useState","shoesdata","shoes변경","로딩중","로딩중변경","재고변경","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","Provider","value","axios","get","then","result","data","catch","console","log","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","초기값","store","createStore","combineReducers","액션","copy","found","findIndex","payload","alert","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0f125dbb.chunk.js","sourcesContent":["export default [\r\n    {\r\n        id : 0,\r\n        title : \"White and Black\",\r\n        content : \"Born in France\",\r\n        price : 120000\r\n    },\r\n\r\n    {\r\n        id : 1,\r\n        title : \"Red Knit\",\r\n        content : \"Born in Seoul\",\r\n        price : 110000\r\n    },\r\n\r\n    {\r\n        id : 2,\r\n        title : \"Gray Yordan\",\r\n        content : \"Born in the States\",\r\n        price : 130000\r\n    }\r\n]","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, memo } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport './App.css';\r\n\r\nfunction Cart(props) {\r\n    return (\r\n        <div>\r\n            <Table responsive>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>상품명</th>\r\n                    <th>수량</th>\r\n                    <th>변경</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                { props.state.map((a, i)=>{\r\n                    return(\r\n                        <tr key={i}>\r\n                            <td>{ i+1 }</td>\r\n                            <td>{ props.state[i].name }</td>\r\n                            <td>{ props.state[i].quan }</td>\r\n                            <td>\r\n                                {/* dispatch의 { }안의 내용이 reducer의 액션 파라미터이다 */}\r\n                                <button onClick={ ()=>{ props.dispatch({ type : '수량증가', 데이터 : a.id }) }}>+</button>\r\n                                <button onClick={ ()=>{ props.dispatch({ type : '수량감소', 데이터 : a.id }) }}>-</button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                 })    \r\n                }\r\n                </tbody>\r\n            </Table>\r\n            \r\n            {\r\n            props.경고창 === true \r\n            ? (\r\n            <div className=\"my-alert2 alertbox\">\r\n                <p className=\"alertText\">지금 구매하시면 신규할인 20%</p>\r\n                <p className=\"closebox\" onClick={()=>{ props.dispatch({type:'닫기'}) }}>X</p>\r\n            </div> )\r\n            : null\r\n            }\r\n\r\n            {/* <Parent 이름=\"용민\" 나이=\"27\"></Parent> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// state는 store안의 하나하나의 state\r\nfunction 함수명(state){\r\n    return {\r\n        state : state.reducer,\r\n        경고창 : state.reducer2\r\n    }\r\n}\r\n\r\n// 재렌더링 테스트\r\nfunction Parent(props) {\r\n    return (\r\n        <div>\r\n            <Child1 이름={props.이름}></Child1>\r\n            <Child2 나이={props.나이}></Child2>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Child1(props) {\r\n    useEffect(()=>{ console.log('렌더링1')})\r\n    return (\r\n        <div>1111</div>\r\n    )\r\n}\r\n\r\nlet Child2 = memo(function() {\r\n    useEffect(()=>{ console.log('렌더링2')})\r\n    return (\r\n        <div>2222</div>\r\n    )\r\n});\r\n\r\n\r\n\r\n\r\nexport default connect(함수명)(Cart)\r\n\r\n// export default Cart;","/* eslint-disable */\n\nimport React, {useState, useContext, lazy, Suspense} from 'react';\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron } from 'react-bootstrap';\nimport logo from './logo.svg';\nimport './App.css';\nimport shoesdata from './data.js';\n// import Detail from './Detail.js';\nlet Detail = lazy(()=>{ return import('./Detail.js') });\n\nimport axios from 'axios';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\n\nimport Cart from './Cart.js';\n\nexport let 재고context = React.createContext();\n\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(shoesdata);\n  let [로딩중, 로딩중변경] = useState(false);\n  let [재고, 재고변경] = useState([10, 11, 12]);\n\n\n  // 복사본 만들기\n  function Itemcontent() {\n    var 상품컨텐츠 = [];\n    for (var i=0 ; i<Shoescontent.length ; i++) {\n      상품컨텐츠.push(Shoescontent);\n    }\n    return 상품컨텐츠\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\" className=\"\">\n        <Navbar.Brand href=\"#home\">Shoes Shop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail/0\">Detail</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>20% Seanson OFF</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          <div className=\"container\">\n\n            <재고context.Provider value={재고}>\n\n            <div className=\"row\">\n              {\n                shoes.map( (a, i)=>{\n                  return <Shoescontent shoes={shoes[i]} i={i} key={i} />\n                })\n              }\n            </div>\n\n            {\n              로딩중 === true\n              // ? <div className=\"my-alert2\">로딩 중 입니다</div>\n              ? <div id=\"preloader\">\n                  <div id=\"status\">&nbsp;</div>\n                </div>\n              : null\n            }\n\n            </재고context.Provider>\n\n\n            <button className=\"btn btn-primary\" onClick={ ()=>{ \n              \n              로딩중변경(true);\n\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result)=>{\n                로딩중변경(false);\n                shoes변경( [...shoes, ...result.data] );\n               })\n              .catch(()=>{ \n                console.log('fail');\n               })\n             }}>더보기</button>\n          </div>\n        \n          \n          \n        </Route>\n        \n\n        <Route path=\"/detail/:id\">\n          <재고context.Provider value={재고}>\n            <Suspense fallback={<div>로딩전까지 보여줄 HTML</div>}>\n              <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}></Detail>\n            </Suspense>\n          </재고context.Provider>\n        </Route>\n\n        \n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n\n\n\n        {/* <Route path=\"/:id\">\n          <div>아무거나 적었을 때 이거 보여주삼!!</div>\n        </Route> */}\n\n        {/* <Route path=\"/어쩌구\" component={Modal} ></Route> */}\n      </Switch>    \n\n    </div>\n  );\n\n}\n\n\n\nfunction Shoescontent(props) {\n\n  let 재고 = useContext(재고context);\n  let history = useHistory();\n\n  return(\n     <div className=\"col-md-4 itembox\" onClick={()=>{ history.push('/detail/'+props.shoes.id) }}>\n       <img src={ 'https://codingapple1.github.io/shop/shoes' + (props.i+1) + '.jpg' } width=\"100%\" />\n       <h4>{ props.shoes.title }</h4>\n       <p>{ props.shoes.content } & { props.shoes.price }</p>\n       <p>재고 : {재고[props.i]}</p>\n     </div>\n  )\n}\n\n// function Test(){\n\n//   let 재고 = useContext(재고context);\n\n//   return <p>{재고[0]}</p>\n// }\n\n\n// className=\"row\" : 화면을 세로 12등분\n// col-md-4 : 3등분 + 모바일에서 세로정렬\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\n\n// redux store에 온갖 데이터 저장 ㄴㄴ\n// 다른 컴포넌트에서 사용할 일이 없으면 useState사용할 것\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n\n  if (액션.type === '닫기') {\n    state = false;\n    return state\n  } else {\n    return state\n  }\n}\n\n\nlet 초기값 = [\n  \n];\n  \n\nfunction reducer(state = 초기값, 액션){\n  // ... 은 deep copy\n  let copy = [...state];\n\n  if (액션.type === '항목추가') {\n    \n    // state안에 id : 액선.payload 있나?\n    // findIndex : array안에서 원하는 데이터 찾아주는 함수(몇번째 항목에 있는지)\n    let found = state.findIndex((a)=>{ return a.id === 액션.payload.id });\n\n    // found가 0보다 크거나 같다는 것은 array안에 같은 값이 몇번째에 위치해있다는 것임\n    // 따라서 array의 복사본인 copy의 found번지의 quan을 증가시켜라\n    if ( found >= 0 ) {\n      copy[found].quan++;\n\n      return copy\n    } else {\n      copy.push(액션.payload);\n      \n      return copy\n    }\n\n  } else if (액션.type === '수량증가'){\n  \n    copy[액션.데이터].quan++;\n\n    return copy\n    \n  } else if(액션.type === '수량감소') {\n\n    copy[액션.데이터].quan--;\n\n    if (copy[액션.데이터].quan === 0) {\n      alert('최소 수량입니다');\n      copy[액션.데이터].quan++;\n    }\n\n    return copy\n\n  } else {\n    return state\n  }\n}\n\nlet store = createStore(combineReducers({reducer, reducer2}));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorkerRegistration.register();\n\nreportWebVitals();"],"sourceRoot":""}